<?xml version="1.0" encoding="utf-8"?>

<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:views="clr-namespace:PQLines.Views;assembly=PQLines"
             xmlns:valueConverters="clr-namespace:PQLines.Views.ValueConverters;assembly=PQLines"
             x:Class="PQLines.Views.ThemedContentPage">
            <!--BackgroundImage="BackgroundPortrait.png">-->
  <!-- We need to rely on our renderer, ThemedContentPageRenderer, to position and scale our background image for us for each device 
         I tried doing such scaling in this shared code, but I couldn't get the scaling to work properly -->
  <!-- Note that Background.png is, and should always be, a free to use image http://www.freeimages.com/photo/powerline-textures-1-1184565 -->


  <!-- All of our pages (Views) currently inherit this ThemedContentPage.xaml
    This page is intercepted by our custom renderer ThemedContentPageRenderer for platform specific renderings of our controls-->


  <ContentPage.Resources>
    <ResourceDictionary>

      <valueConverters:InverseBoolConverter x:Key="InverseBool" />

      <LayoutOptions x:Key="StackLayoutHorzOptions">Center</LayoutOptions>
      <LayoutOptions x:Key="StackLayoutVertOptions">StartAndExpand</LayoutOptions>

      <Color x:Key="TitleRootGridBackgroundColor">White</Color>
      <LayoutOptions x:Key="TitleRootGridVertOptions">Center</LayoutOptions>
      <GridLength x:Key="TitleRootGridRowDefHeight">80</GridLength>
      <GridLength x:Key="TitleRootGridColumnDefWidth">*</GridLength>

      <LayoutOptions x:Key="TitleChildGridVertOptions">Center</LayoutOptions>
      <LayoutOptions x:Key="TitleChildGridHorzOptions">Center</LayoutOptions>
      <x:Double x:Key="TitleChildGridWidthRequest">280</x:Double>
      <GridLength x:Key="TitleChildGridRowDefHeight">80</GridLength>
      <GridLength x:Key="TitleChildGridLogoColumnDefWidth">*</GridLength>
      <GridLength x:Key="TitleChildGridTextColumnDefWidth">*</GridLength>


      <Color x:Key="TitleChildGridTextColor">#002C77</Color>

      <x:String x:Key="TitleChildGridText">PQ Lines</x:String>
      <x:Double x:Key="TitleChildGridTextHeightRequest">30</x:Double>
      <x:Double x:Key="TitleChildGridTextFontSize">22</x:Double>
      <FontAttributes x:Key="TitleChildGridTextFontAttributes">Bold</FontAttributes>
      <TextAlignment x:Key="TitleChildGridTextXAlign">Center</TextAlignment>
      <TextAlignment x:Key="TitleChildGridTextYAlign">Center</TextAlignment>
      <!-- Xamarin Forms for Android only allows font families to be set in a custom renderer using a .ttf - see ThemedLabelRenderer.cs -->
      <OnPlatform x:TypeArguments="x:String" x:Key="TitleChildGridTextFontPerDevice"
                  iOS="GillSans-BoldItalic"
                  Android=""
                  WinPhone="" />

      <!-- Search functionality may be included in a later revision 
            <x:Double x:Key="SearchBarWidthRequest">280</x:Double>
            <x:String x:Key="SearchBarTextPlaceholder">Search for an item or value...</x:String>
            <LayoutOptions x:Key="SearchBarHorzOptions">CenterAndExpand</LayoutOptions>
            -->

      <LayoutOptions x:Key="ScrollViewVertOptions">StartAndExpand</LayoutOptions>

      <!-- Refer to this code-behind for more themed property values -->

    </ResourceDictionary>
  </ContentPage.Resources>

</ContentPage>